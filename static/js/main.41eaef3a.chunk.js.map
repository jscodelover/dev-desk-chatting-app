{"version":3,"sources":["store/action.js","store/reducer.js","util/firebaseConfig.js","components/Auth/Login.js","util/defaultThemeColor.js","components/Auth/Register.js","components/Home/ColorPanel/ColorPanel.js","components/Spinner.js","components/Home/SidePanel/UserPanel.js","util/directmessage.js","components/Home/SidePanel/DisplayChannel.js","util/notification.js","util/typingfn.js","util/sessionData.js","components/Home/SidePanel/Channel.js","components/Home/SidePanel/DirectMessages.js","components/Home/SidePanel/Starred.js","components/Home/SidePanel/SidePanel.js","components/Home/Messages/MessageHeader.js","components/Home/Messages/FileModal.js","components/Home/Messages/Typing.js","components/Home/Messages/Emoji.js","components/Home/Messages/MessageForm.js","components/Home/Messages/Message.js","components/Home/Messages/Messages.js","components/Home/MetaPanel/MetaPanel.js","components/Home/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["actions","SET_USER","SET_OTHER_USERS","CLEAR_USER","SET_CHANNEL","SET_OTHER_CHANNELS","ALL_CHANNEL_ID","SET_PRIVATE_CHANNEL","ACTIVE_CHANNEL_ID","SET_USERS_IN_CHANNEL","SHOW_CHANNEL_INFO","SET_NOTIFICATION","SET_MESSAGES","CLEAR_MESSAGES","setChannel","payload","type","setActiveChannelID","setPrivateChannel","setShowChannelInfo","setNotification","clearMessages","USER_INITIAL_STATE","currentUser","loading","otherUsers","isAuthenticated","CHANNEL_INITIAL_STATE","currentChannel","otherChannels","channelIDs","privateChannel","activeChannelID","usersInChannel","showChannelInfo","NOTIFICATION_INITIAL_STATE","notification","MESSAGES_INITIAL_STATE","messages","rootReducer","combineReducers","user","state","arguments","length","undefined","action","Object","objectSpread","channel","CLEAR_CHANNEL","concat","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","displayError","error","map","err","i","react_default","a","createElement","key","errorHighlighter","some","toLowerCase","includes","handleSubmit","preventDefault","isFormValid","auth","signInWithEmailAndPassword","email","password","then","data","history","push","catch","console","log","message","_ref","_this$state","Grid","verticalAlign","textAlign","className","Column","Header","as","icon","color","Icon","Subheader","Form","size","onSubmit","Segment","stacked","Input","iconPosition","placeholder","onChange","Button","fluid","disabled","Message_Message","negative","Link","to","Component","themes","colors","sidebar","btn1","btn2","Registers","createUserWithEmailAndPassword","updateProfile","displayName","username","photoURL","md5","saveUser","child","uid","set","userID","picture","createdOn","metadata","creationTime","passwordConfirmation","database","ref","ColorPanel","openModal","modal","closeModal","sidebarColorHandler","r","g","b","textColorHandler","_ref2","text","saveColor","userRef","update","theme","saveTheme","c1","c2","c3","defaultTheme","color1","color2","color3","Fragment","Divider","style","border","onClick","backgroundColor","screenWidth","window","innerWidth","_this2","addEventListener","_this3","_this$state2","Sidebar","Menu","width","inverted","vertical","visible","position","right","showSidebar","marginTop","_theme$colors","Modal","open","basic","content","Content","background","lib","_ref3","rgb","_ref4","Actions","React","Spinner","Dimmer","active","Loader","UserPanel","dropdownOptions","handleSignout","prevState","signOut","lastSeen","ServerValue","TIMESTAMP","status","Redirect","selectedImage","file","files","image","preview","avatar","getImageScaledToCanvas","toBlob","blob","imageURL","URL","createObjectURL","croppedImage","save","storageRef","put","contentType","snap","getDownloadURL","downloadURL","storage","Row","padding","Dropdown","trigger","Image","src","spaced","options","label","accept","dist_default","editor","height","scale","marginLeft","generateId","DisplayChannel","getCount","id","index","findIndex","noti","channels","changeChannel","users","hideStarredID","textColor","closedSidebar","Item","channelName","Label","createNotificationArray","children","channelID","notificationRef","once","hasChild","val","newNotification","total","count","lastTotal","clearNotification","typingRemove","remove","addSessionData","sessionStorage","setItem","removeSessionData","removeItem","getSessionData","getItem","Channel","addListener","loadedChannel","displayNotification","channelRef","on","setOtherChannels","setFirstChannel","checkNotification","removeListener","off","firstChannelActivated","handleOpenModal","handleCloseModal","channelDetail","createdBy","channelInStore","notify","messageRef","numChildren","info","_this$state3","_this$props","react","fontWeight","float","cursor","SidePanel_DisplayChannel","typeFn","onClose","Field","connect","dispatch","channelInfo","isPrivate","notifications","DirectMessage","activeChannel","loadedUsers","setOtherUsers","totalUsers","newtotalUsers","toConsumableArray","Starred","findHiddenStarredID","starred","hideForChannel","reduce","acc","channel_id","result","checkNotificationChannel","hideStarredID_ForChannel","hideForUser","checkNotificationUser","hideStarredID_ForUser","changeUser","prevProps","_this$props2","marginBottom","split","SidePanel","visibleSideBar","fontSize","zIndex","direction","animation","SidePanel_UserPanel","SidePanel_Starred","SidePanel_Channel","DirectMessages","MessageHeader","starredChannel","prevStarred","splice","join","searchMessage","metaData","searchLoading","hasSearchData","clearSearchData","clearing","floated","moment","format","top","FileModal","addFile","sendFile","uploadFile","Typing","typingUsers","u","Emoji","addEmoji","e","emojiPic","unified","String","fromCodePoint","sym","codesArray","forEach","el","apply","onSelect","openEmojiPicker","openPicker","display","marginRight","alignItems","borderRadius","dist_es","title","left","bottom","showPreview","MessageForm","getMessage","typingRef","session","cursorPos","selectionStart","formatting","replaceText","trim","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","t","htmlData","slice","replace","return","formattedMessage","blockQuote","match","oneLineQuote","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","quote","boldDetector","italicDetector","strikeThrough","blockCode","messageForInlineCode","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","m","inlineCode","createMessage","messageObj","timestamp","sendMessage","sendFileMessage","pathToUpload","uploadStatus","getSelectionPosition","selectedText","getSelection","toString","selectedPosition","start","end","selectionEnd","uploadTask","uuidv4","snapshot","uploadPercentage","Math","round","bytesTransferred","totalBytes","emoji","part1","part2","handleCommand","ctrlKey","formatTextAreaMessage","tag","textBeforeSelection","substring","textAfterSelection","getStoragedData","_this$state4","_this$props3","sideBarVisible","Messages_Typing","Progress","percent","progress","react_textarea_autosize_esm_browser","input","onKeyDown","maxHeight","minHeight","Group","Messages_Emoji","labelPosition","Messages_FileModal","Message","msg","msgUser","allUsers","find","createGroup","todayMsg","Date","Comment","Avatar","Author","Metadata","hasOwnProperty","Text","dangerouslySetInnerHTML","__html","href","downloadable","rounded","Messages","scrollToBottom","scrollRef","scrollIntoView","behavior","fetchMessage","loadedMessage","snapMsg","userCount","setUsersInChannel","setMessages","reachedDBEnd","allUser","userArray","obj","findTypingUsers","typerArray","displayMessages","Messages_Message","searchInput","regxExp","RegExp","userSearched","Boolean","searchMsg","setTimeout","_this$props4","channelUsers","userInHeader","connectionRef","onDisconnect","clearTimeout","time","inputValue","_this$props5","sideBar","Messages_MessageHeader","scroll","Messages_MessageForm","MetaPanel","handleClick","titleProps","newIndex","activeIndex","creator","isCreator","circular","margin","Accordion","styled","Title","Home","checkWidth","removeToken","orderByChild","equalTo","keys","isShow","messaging","onTokenRefresh","requestPermission","getToken","token","columns","Home_Messages_Messages","Home_SidePanel_SidePanel","Home_ColorPanel_ColorPanel","MetaPanel_MetaPanel","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","App","setStatus","persence","addStatus","onAuthStateChanged","setuser","clearuser","Switch","path","App_PrivateRoute","exact","Register","withRouter","disptach","location","hostname","store","createStore","reducer","composeWithDevTools","Root","es","BrowserRouter","basename","src_components_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41eaef3a.chunk.js","sourcesContent":["export const actions = {\n  SET_USER: \"SET_USER\",\n  SET_OTHER_USERS: \"SET_OTHER_USERS\",\n  CLEAR_USER: \"CLEAR_USER\",\n\n  SET_CHANNEL: \"SET_CHANNEL\",\n  SET_OTHER_CHANNELS: \"SET_OTHER_CHANNELS\",\n  ALL_CHANNEL_ID: \"ALL_CHANNEL_ID\",\n  SET_PRIVATE_CHANNEL: \"SET_PRIVATE_CHANNEL\",\n  ACTIVE_CHANNEL_ID: \"ACTIVE_CHANNEL_ID\",\n  SET_USERS_IN_CHANNEL: \"SET_USERS_IN_CHANNEL\",\n  SHOW_CHANNEL_INFO: \"SHOW_CHANNEL_INFO\",\n\n  SET_NOTIFICATION: \"SET_NOTIFICATION\",\n\n  SET_MESSAGES: \"SET_MESSAGES\",\n  CLEAR_MESSAGES: \"CLEAR_MESSAGES\"\n};\n\n/* User actions */\nexport function setUser(payload) {\n  return {\n    type: actions.SET_USER,\n    payload\n  };\n}\n\nexport function clearUser() {\n  return {\n    type: actions.CLEAR_USER\n  };\n}\n\nexport function setOtherUsers(payload) {\n  return {\n    type: actions.SET_OTHER_USERS,\n    payload\n  };\n}\n\n/* Channel actions */\nexport function setChannel(payload) {\n  return {\n    type: actions.SET_CHANNEL,\n    payload\n  };\n}\n\nexport function setActiveChannelID(payload) {\n  return {\n    type: actions.ACTIVE_CHANNEL_ID,\n    payload\n  };\n}\n\nexport function setChannelID(payload) {\n  return {\n    type: actions.ALL_CHANNEL_ID,\n    payload\n  };\n}\n\nexport function setPrivateChannel(payload) {\n  return {\n    type: actions.SET_PRIVATE_CHANNEL,\n    payload\n  };\n}\n\nexport function setOtherChannels(payload) {\n  return {\n    type: actions.SET_OTHER_CHANNELS,\n    payload\n  };\n}\n\nexport function setUsersInChannel(payload) {\n  return {\n    type: actions.SET_USERS_IN_CHANNEL,\n    payload\n  };\n}\n\nexport function setShowChannelInfo(payload) {\n  return {\n    type: actions.SHOW_CHANNEL_INFO,\n    payload\n  };\n}\n\n/* Notification */\n\nexport function setNotification(payload) {\n  return {\n    type: actions.SET_NOTIFICATION,\n    payload\n  };\n}\n\n/*Messages */\nexport function setMessages(payload) {\n  return {\n    type: actions.SET_MESSAGES,\n    payload\n  };\n}\n\nexport function clearMessages() {\n  return {\n    type: actions.CLEAR_MESSAGES\n  };\n}\n","import { actions } from \"./action\";\nimport { combineReducers } from \"redux\";\n\nconst USER_INITIAL_STATE = {\n  currentUser: {},\n  loading: true,\n  otherUsers: [],\n  isAuthenticated: false\n};\n\nconst user_reducer = (state = USER_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actions.SET_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case actions.CLEAR_USER:\n      return {\n        ...state,\n        currentUser: {},\n        isAuthenticated: false,\n        loading: false\n      };\n    case actions.SET_OTHER_USERS:\n      return {\n        ...state,\n        otherUsers: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst CHANNEL_INITIAL_STATE = {\n  currentChannel: {},\n  otherChannels: [],\n  channelIDs: [],\n  privateChannel: false,\n  activeChannelID: \"\",\n  usersInChannel: [],\n  showChannelInfo: false\n};\n\nconst channel_reducer = (state = CHANNEL_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actions.SET_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload\n      };\n    case actions.CLEAR_CHANNEL:\n      return {\n        ...state,\n        currentChannel: {}\n      };\n    case actions.ACTIVE_CHANNEL_ID:\n      return {\n        ...state,\n        activeChannelID: action.payload\n      };\n    case actions.ALL_CHANNEL_ID:\n      return {\n        ...state,\n        channelIDs: state.channelIDs.concat(action.payload)\n      };\n    case actions.SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        privateChannel: action.payload\n      };\n    case actions.SET_OTHER_CHANNELS:\n      return {\n        ...state,\n        otherChannels: action.payload\n      };\n    case actions.SET_USERS_IN_CHANNEL:\n      return {\n        ...state,\n        usersInChannel: action.payload\n      };\n    case actions.SHOW_CHANNEL_INFO:\n      return {\n        ...state,\n        showChannelInfo: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst NOTIFICATION_INITIAL_STATE = {\n  notification: []\n};\n\nconst notification_reducer = (state = NOTIFICATION_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actions.SET_NOTIFICATION: {\n      return {\n        ...state,\n        notification: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst MESSAGES_INITIAL_STATE = {\n  messages: []\n};\n\nconst messages_reducer = (state = MESSAGES_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actions.SET_MESSAGES: {\n      return {\n        ...state,\n        messages: action.payload\n      };\n    }\n    case actions.CLEAR_MESSAGES: {\n      return {\n        ...state,\n        messages: []\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer,\n  notification: notification_reducer,\n  messages: messages_reducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIRE_apiKey,\n  authDomain: process.env.REACT_APP_FIRE_authDomain,\n  databaseURL: process.env.REACT_APP_FIRE_databaseURL,\n  projectId: process.env.REACT_APP_FIRE_projectId,\n  storageBucket: process.env.REACT_APP_FIRE_storageBucket,\n  messagingSenderId: process.env.REACT_APP_FIRE_messagingSenderId\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Grid,\n  Header,\n  Icon,\n  Form,\n  Button,\n  Segment,\n  Message\n} from \"semantic-ui-react\";\nimport \"./Auth.css\";\nimport firebase from \"../../util/firebaseConfig\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      error: []\n    };\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  displayError = error => error.map((err, i) => <p key={i}>{err}</p>);\n\n  errorHighlighter = (error, name) =>\n    error.some(err => err.toLowerCase().includes(name));\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ loading: true, error: [] });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(data => {\n          // TODO: Add push to main page somewhere here. and save data to redux\n          this.setState({ loading: false });\n          this.props.history.push(\"/\");\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error: [error.message], loading: false });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => {\n    let err = [];\n    if (!email.length || !password.length) {\n      this.setState({ error: err.concat(\"Form is not fill\") });\n      return false;\n    } else if (password.length < 6) {\n      this.setState({\n        error: err.concat(\"Password Should be more than 6 digits\")\n      });\n      return false;\n    }\n    return true;\n  };\n\n  render() {\n    const { email, password, loading, error } = this.state;\n    return (\n      <Grid verticalAlign=\"middle\" textAlign=\"center\" className=\"heading\">\n        <Grid.Column className=\"auth-box\">\n          <Header as=\"h1\" icon color=\"teal\" textAlign=\"center\">\n            <Icon name=\"code\" />\n            Login for DevDesk\n            <Header.Subheader>\n              Platform which user can use to chat and store notes.\n            </Header.Subheader>\n          </Header>\n          <Form size=\"large\" onSubmit={this.handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                name=\"email\"\n                type=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.errorHighlighter(error, \"email\") ? \"error\" : \"\"}\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password (with min 6 digit)\"\n                onChange={this.handleChange}\n                value={password}\n                className={\n                  this.errorHighlighter(error, \"password\") ? \"error\" : \"\"\n                }\n              />\n              <Button\n                fluid\n                type=\"submit\"\n                color=\"teal\"\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n              >\n                Submit\n              </Button>\n            </Segment>\n            {error.length > 0 && (\n              <Message negative>\n                <Message.Header>Error</Message.Header>\n                {this.displayError(error)}\n              </Message>\n            )}\n          </Form>\n          <Message>\n            Not a user ? <Link to=\"/register\">Resgister</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","export const themes = [\n  {\n    colors: {\n      sidebar: \"rgba(76,60,76,1)\",\n      btn1: \"rgba(242, 113, 28, 1)\",\n      btn2: \"rgba(69, 182, 174, 1)\"\n    }\n  },\n\n  {\n    colors: {\n      sidebar: \"rgba(30, 34, 58, 1)\",\n      btn1: \"rgba(171, 129, 9, 1)\",\n      btn2: \"rgba(219, 40, 40, 1)\"\n    }\n  },\n\n  {\n    colors: {\n      sidebar: \"rgba(30, 74, 109,1)\",\n      btn1: \"rgba(181, 102, 46,1)\",\n      btn2: \"rgba(84, 24, 24,1)\"\n    }\n  },\n  {\n    colors: {\n      sidebar: \"rgba(68, 34, 41,1)\",\n      btn1: \"rgba(158, 125, 124,1)\",\n      btn2: \"rgba(86, 57, 63,1)\"\n    }\n  },\n\n  {\n    colors: {\n      sidebar: \"rgba(56, 67, 58,1)\",\n      btn1: \"rgba(197, 149, 78,1)\",\n      btn2: \"rgba(218, 110, 80,1)\"\n    }\n  }\n];\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Grid,\n  Header,\n  Icon,\n  Form,\n  Button,\n  Segment,\n  Message\n} from \"semantic-ui-react\";\nimport \"./Auth.css\";\nimport md5 from \"md5\";\nimport firebase from \"../../util/firebaseConfig\";\nimport { themes } from \"../../util/defaultThemeColor\";\n\nclass Registers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      loading: false,\n      error: [],\n      user: firebase.database().ref(\"users\")\n    };\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  displayError = error => error.map((err, i) => <p key={i}>{err}</p>);\n\n  errorHighlighter = (error, name) =>\n    error.some(err => err.toLowerCase().includes(name));\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ loading: true, error: [] });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(data => {\n          data.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `https://www.gravatar.com/avatar/${md5(\n                this.state.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(data);\n            });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error: [error.message], loading: false });\n        });\n    }\n  };\n\n  saveUser = data => {\n    this.state.user.child(data.user.uid).set({\n      userID: data.user.uid,\n      username: data.user.displayName,\n      picture: data.user.photoURL,\n      createdOn: data.user.metadata.creationTime,\n      color: [\n        themes[0].colors.sidebar,\n        themes[0].colors.btn1,\n        themes[0].colors.btn2\n      ]\n    });\n  };\n\n  isFormValid = ({\n    username,\n    email,\n    password,\n    passwordConfirmation,\n    error\n  }) => {\n    let err = [];\n    if (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    ) {\n      this.setState({ error: err.concat(\"Form is not fill\") });\n      return false;\n    } else if (password.length < 6 || passwordConfirmation.length < 6) {\n      this.setState({\n        error: err.concat(\"Password Should be more than 6 digits\")\n      });\n      return false;\n    } else if (password !== passwordConfirmation) {\n      this.setState({ error: err.concat(\"Password does not match\") });\n      return false;\n    }\n    return true;\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      loading,\n      error\n    } = this.state;\n    return (\n      <Grid verticalAlign=\"middle\" textAlign=\"center\" className=\"heading\">\n        <Grid.Column className=\"auth-box\">\n          <Header as=\"h1\" icon color=\"teal\" textAlign=\"center\">\n            <Icon name=\"code\" />\n            Register for DevDesk\n            <Header.Subheader>\n              Platform which user can use to chat and store notes.\n            </Header.Subheader>\n          </Header>\n          <Form size=\"large\" onSubmit={this.handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                name=\"username\"\n                type=\"text\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"UserName\"\n                onChange={this.handleChange}\n                value={username}\n              />\n              <Form.Input\n                name=\"email\"\n                type=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.errorHighlighter(error, \"email\") ? \"error\" : \"\"}\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password (with min 6 digit)\"\n                onChange={this.handleChange}\n                value={password}\n                className={\n                  this.errorHighlighter(error, \"password\") ? \"error\" : \"\"\n                }\n              />\n              <Form.Input\n                name=\"passwordConfirmation\"\n                type=\"password\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Confirm Password\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={\n                  this.errorHighlighter(error, \"password\") ? \"error\" : \"\"\n                }\n              />\n              <Button\n                fluid\n                type=\"submit\"\n                color=\"teal\"\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n              >\n                Submit\n              </Button>\n            </Segment>\n            {error.length > 0 && (\n              <Message negative>\n                <Message.Header>Error</Message.Header>\n                {this.displayError(error)}\n              </Message>\n            )}\n          </Form>\n          <Message>\n            Already a user ? <Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Registers;\n","import React from \"react\";\nimport {\n  Menu,\n  Sidebar,\n  Button,\n  Divider,\n  Modal,\n  Header,\n  Icon,\n  Segment\n} from \"semantic-ui-react\";\nimport { ChromePicker } from \"react-color\";\nimport { themes } from \"../../../util/defaultThemeColor\";\nimport firebase from \"../../../util/firebaseConfig\";\n\nclass ColorPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userRef: firebase.database().ref(\"users\"),\n      modal: false,\n      sidebar: \"rgba(0, 0, 0, 1)\",\n      btn1: \"\",\n      btn2: \"\",\n      text: \"rgba(255,255,255,0.9)\",\n      screenWidth: window.innerWidth\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", () => {\n      this.setState({ screenWidth: window.innerWidth });\n    });\n  }\n\n  openModal = () => {\n    this.setState({ modal: true });\n  };\n\n  closeModal = () => {\n    this.setState({ modal: false });\n  };\n\n  sidebarColorHandler = ({ r, g, b, a }) => {\n    this.setState({\n      sidebar: `rgba(${r},${g},${b},${a})`,\n      btn1: `rgba(${r - 11},${g - 6},${b - 5},${0.8})`,\n      btn2: `rgba(${r - 11},${g - 6},${b - 5},${0.9})`\n    });\n  };\n  textColorHandler = ({ r, g, b, a }) => {\n    this.setState({\n      text: `rgba(${r},${g},${b},${a})`\n    });\n  };\n\n  saveColor = () => {\n    const { userRef, sidebar, btn1, btn2, text } = this.state;\n    const { user } = this.props;\n    userRef\n      .child(`${user.userID}/color`)\n      .update({ theme: [sidebar, btn1, btn2], text })\n      .then(() => {\n        this.setState({ modal: false });\n      });\n  };\n\n  saveTheme = (c1, c2, c3) => {\n    const { userRef } = this.state;\n    const { user } = this.props;\n    userRef\n      .child(`${user.userID}/color`)\n      .update({ theme: [c1, c2, c3], text: \"rgba(255,255,255,0.5)\" });\n  };\n\n  defaultTheme = (color1, color2, color3) => (\n    <React.Fragment key={color1}>\n      <Divider style={{ border: \"none\" }} />\n      <div\n        className=\"color-box\"\n        onClick={() => this.saveTheme(color1, color2, color3)}\n      >\n        <div className=\"color-sidebar\" style={{ backgroundColor: color1 }}>\n          <div className=\"color-replyBtn\" style={{ backgroundColor: color2 }} />\n          <div className=\"color-fileBtn\" style={{ backgroundColor: color3 }} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n\n  render() {\n    const { modal, sidebar, text } = this.state;\n    return (\n      <Sidebar\n        as={Menu}\n        width=\"very thin\"\n        inverted\n        vertical\n        visible\n        icon=\"labeled\"\n        style={{\n          position: \"fixed\",\n          right: 0\n        }}\n      >\n        {this.state.screenWidth <= 678 ? (\n          <Button\n            icon=\"align justify\"\n            size=\"small\"\n            onClick={this.props.showSidebar}\n            style={{ marginTop: \"5px\" }}\n          />\n        ) : null}\n        <Divider style={{ border: \"none\" }} />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\n        {themes.map(theme => {\n          let { sidebar, btn1, btn2 } = theme.colors;\n          return this.defaultTheme(sidebar, btn1, btn2);\n        })}\n        <Modal open={modal} basic size=\"small\">\n          <Header as=\"h2\" content=\"Pick your theme\" />\n          <Modal.Content>\n            <Header as=\"h4\" content=\"Your Theme\" style={{ color: \"white\" }} />\n            <Segment inverted style={{ background: sidebar }}>\n              {/* <SliderPicker\n                styles={{ default: { wrap: {} } }}\n                color={sidebar}\n                onChange={({ rgb }) => {\n                  this.sidebarColorHandler(rgb);\n                }}\n              /> */}\n              <ChromePicker\n                color={sidebar}\n                onChange={({ rgb }) => {\n                  this.sidebarColorHandler(rgb);\n                }}\n              />\n            </Segment>\n            <Header as=\"h4\" content=\"Text Color\" style={{ color: \"white\" }} />\n            <Segment inverted style={{ background: text }}>\n              <ChromePicker\n                color={text}\n                onChange={({ rgb }) => {\n                  this.textColorHandler(rgb);\n                }}\n              />\n            </Segment>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n            <Button color=\"green\" inverted onClick={this.saveColor}>\n              <Icon name=\"checkmark\" /> Save\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Sidebar>\n    );\n  }\n}\nexport default ColorPanel;\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nexport default function Spinner() {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\">Preparing Chat....</Loader>\n    </Dimmer>\n  );\n}\n","import React, { Component } from \"react\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Header,\n  Image,\n  Icon,\n  Dropdown,\n  Grid,\n  Modal,\n  Button,\n  Input\n} from \"semantic-ui-react\";\nimport firebase from \"../../../util/firebaseConfig\";\nimport Spinner from \"../../Spinner\";\n\nclass UserPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      image: \"\",\n      croppedImage: \"\",\n      userRef: firebase.database().ref(\"users\"),\n      storageRef: firebase.storage().ref(),\n      blob: \"\",\n      loading: false\n    };\n  }\n  dropdownOptions = () => [\n    // {\n    //   key: \"user\",\n    //   text: (\n    //     <span>\n    //       Signed in as <strong>{this.props.user.username}</strong>\n    //     </span>\n    //   ),\n    //   disabled: true\n    // },\n    {\n      key: \"avatar\",\n      text: <span onClick={this.modal}>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign Out</span>\n    }\n  ];\n\n  modal = () => {\n    this.setState(prevState => {\n      return { modal: !prevState.modal };\n    });\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        firebase\n          .database()\n          .ref(`users/${this.props.user.userID}`)\n          .set({\n            ...this.props.user,\n            lastSeen: firebase.database.ServerValue.TIMESTAMP,\n            status: \"offline\"\n          });\n        /* eslint-disable no-unused-expressions */\n        <Redirect to=\"/login\" />;\n      })\n      .catch(function(error) {\n        console.log(\"Can't LogOut. Try Again!!\");\n      });\n  };\n\n  selectedImage = event => {\n    const file = event.target.files[0];\n    this.setState({ image: file });\n  };\n\n  preview = () => {\n    if (this.avatar) {\n      this.avatar.getImageScaledToCanvas().toBlob(blob => {\n        let imageURL = URL.createObjectURL(blob);\n        this.setState({ croppedImage: imageURL, blob });\n      });\n    }\n  };\n\n  save = () => {\n    const { storageRef, userRef, blob } = this.state;\n    const { user } = this.props;\n    storageRef\n      .child(`${user.userID}/images-${user.userID}.jpg`)\n      .put(blob, { contentType: \"image/jpeg\" })\n      .then(snap => {\n        this.setState({ loading: true });\n        this.modal();\n        snap.ref\n          .getDownloadURL()\n          .then(downloadURL => {\n            userRef\n              .child(user.userID)\n              .update({ ...user, picture: downloadURL });\n            this.setState({\n              croppedImage: \"\",\n              blob: \"\",\n              image: \"\",\n              loading: false\n            });\n          })\n          .catch(err => {\n            this.setState({\n              croppedImage: \"\",\n              blob: \"\",\n              image: \"\",\n              loading: false\n            });\n          });\n      });\n  };\n\n  render() {\n    const { modal, image, croppedImage, loading } = this.state;\n    const { color } = this.props.user;\n    return (\n      <React.Fragment>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <Grid>\n            <Grid.Column>\n              <Grid.Row style={{ padding: \"1.2em\" }}>\n                <Header inverted as=\"h2\" style={{ color: `${color.text}` }}>\n                  <Icon name=\"code\" />\n                  <Header.Content>DevDesk</Header.Content>\n                </Header>\n\n                <Header\n                  style={{ padding: \"0.25em\", color: `${color.text}` }}\n                  as=\"h3\"\n                  inverted\n                  textAlign=\"center\"\n                >\n                  <Dropdown\n                    className=\"profile-dropdown-box\"\n                    trigger={\n                      <div className=\"dropdown-name\">\n                        <Image\n                          src={this.props.user.picture}\n                          spaced=\"right\"\n                          avatar\n                        />\n                        <span>{this.props.user.username}</span>\n                      </div>\n                    }\n                    options={this.dropdownOptions()}\n                  />\n                </Header>\n              </Grid.Row>\n            </Grid.Column>\n          </Grid>\n        )}\n        <Modal open={modal} basic>\n          <Header content=\"Change Avatar\" />\n          <Modal.Content>\n            <Input\n              fluid\n              label=\"choose a image\"\n              accept=\"image/*\"\n              type=\"file\"\n              onChange={this.selectedImage}\n            />\n            {image && (\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width={8}>\n                    <AvatarEditor\n                      ref={editor => (this.avatar = editor)}\n                      image={image}\n                      width={300}\n                      height={300}\n                      scale={1.2}\n                    />\n                  </Grid.Column>\n                  <Grid.Column width={8}>\n                    <Image\n                      src={croppedImage}\n                      size=\"small\"\n                      style={{ marginTop: \"27%\", marginLeft: \"27%\" }}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            )}\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"red\" inverted onClick={this.modal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n            <Button color=\"green\" inverted onClick={this.preview}>\n              <Icon name=\"image\" /> Preview\n            </Button>\n            {croppedImage && (\n              <Button color=\"green\" inverted onClick={this.save}>\n                <Icon name=\"image\" /> Save\n              </Button>\n            )}\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UserPanel;\n","export default function generateId(user, props) {\n  return user.userID > props\n    ? `${user.userID}${props}`\n    : `${props}${user.userID}`;\n}\n","import React from \"react\";\nimport { Menu, Label, Icon } from \"semantic-ui-react\";\nimport generateId from \"../../../util/directmessage\";\n\nconst DisplayChannel = props => {\n  function getCount(id, notification) {\n    if (notification.length) {\n      let index = notification.findIndex(noti => id === noti.id);\n      if (index > -1) {\n        return notification[index][\"count\"];\n      }\n    }\n  }\n  const {\n    channels,\n    activeChannelID,\n    notification,\n    changeChannel,\n    users,\n    userID,\n    hideStarredID,\n    textColor,\n    closedSidebar\n  } = props;\n  return (\n    <React.Fragment>\n      {channels ? (\n        <React.Fragment>\n          {channels.length > 0 &&\n            channels.map(\n              channel =>\n                !hideStarredID.includes(channel.id) && (\n                  <Menu.Item\n                    className=\"sidebar-heading\"\n                    key={channel.id}\n                    name={channel.channelName}\n                    onClick={() => {\n                      changeChannel(channel);\n                      closedSidebar();\n                    }}\n                    active={channel.id === activeChannelID}\n                  >\n                    <span style={{ color: textColor }}>\n                      # {channel.channelName}\n                    </span>\n                    {getCount(channel.id, notification) ? (\n                      <Label color=\"red\">\n                        {getCount(channel.id, notification)}\n                      </Label>\n                    ) : (\n                      \"\"\n                    )}\n                  </Menu.Item>\n                )\n            )}\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {users.length &&\n            users.map(\n              user =>\n                !hideStarredID.includes(user.userID) && (\n                  <Menu.Item\n                    className=\"sidebar-heading\"\n                    key={user.userID}\n                    active={user.userID === activeChannelID}\n                    onClick={() => {\n                      changeChannel(user);\n                      closedSidebar();\n                    }}\n                  >\n                    <span style={{ color: textColor }}>\n                      <Icon\n                        name=\"circle\"\n                        color={user.status === \"online\" ? \"green\" : \"red\"}\n                      />\n                      {user.username}\n                    </span>\n                    {getCount(generateId(user, userID), notification) ? (\n                      <Label color=\"red\">\n                        {getCount(generateId(user, userID), notification)}\n                      </Label>\n                    ) : (\n                      \"\"\n                    )}\n                  </Menu.Item>\n                )\n            )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default DisplayChannel;\n","import firebase from \"./firebaseConfig\";\n\nexport function createNotificationArray(\n  children,\n  channelID,\n  userID,\n  activeChannelID\n) {\n  const notificationRef = firebase.database().ref(\"notification\");\n  notificationRef.child(userID).once(\"value\", snap => {\n    if (!snap.hasChild(channelID)) {\n      notificationRef\n        .child(userID)\n        .child(channelID)\n        .update({\n          id: channelID,\n          lastTotal: children,\n          count: 0,\n          total: children\n        });\n    } else {\n      let notification = snap.val()[channelID];\n      let newNotification = {\n        id: channelID,\n        total: children\n      };\n      if (\n        notification.id === activeChannelID ||\n        notification[\"id\"].includes(activeChannelID)\n      ) {\n        newNotification.count = 0;\n        newNotification.lastTotal = children;\n        notificationRef\n          .child(userID)\n          .child(channelID)\n          .set({ ...newNotification });\n      } else {\n        newNotification.count = children - notification.lastTotal;\n        newNotification.lastTotal = notification.lastTotal;\n        notificationRef\n          .child(userID)\n          .child(channelID)\n          .set({ ...newNotification });\n      }\n    }\n  });\n}\n\nexport function clearNotification(channelID, userID) {\n  const notificationRef = firebase.database().ref(\"notification\");\n  notificationRef\n    .child(userID)\n    .child(channelID)\n    .once(\"value\", snap => {\n      let notification = snap.val();\n      notificationRef\n        .child(userID)\n        .child(channelID)\n        .set({\n          id: channelID,\n          lastTotal: notification.total,\n          count: 0,\n          total: notification.total\n        });\n    });\n}\n","import firebase from \"./firebaseConfig\";\n\nexport function typingAdd(message, channel, user) {\n  const typingRef = firebase.database().ref(\"typing\");\n  if (message) {\n    typingRef\n      .child(channel.id)\n      .child(user.userID)\n      .set(user.username);\n  } else typingRemove(channel, user);\n}\n\nexport function typingRemove(channel, user) {\n  const typingRef = firebase.database().ref(\"typing\");\n  typingRef\n    .child(channel.id)\n    .child(user.userID)\n    .remove();\n}\n","export function addSessionData(id, data) {\n  sessionStorage.setItem(id, data);\n}\n\nexport function removeSessionData(id) {\n  sessionStorage.removeItem(id);\n}\n\nexport function getSessionData(id) {\n  return sessionStorage.getItem(id);\n}\n","import * as React from \"react\";\nimport { Menu, Icon, Modal, Button, Form, Input } from \"semantic-ui-react\";\nimport firebase from \"../../../util/firebaseConfig\";\nimport { connect } from \"react-redux\";\nimport {\n  setChannel,\n  setChannelID,\n  setPrivateChannel,\n  setActiveChannelID,\n  setOtherChannels,\n  setNotification,\n  clearMessages\n} from \"../../../store/action\";\nimport DisplayChannel from \"./DisplayChannel\";\nimport Spinner from \"../../Spinner\";\nimport * as notify from \"../../../util/notification\";\nimport * as typeFn from \"../../../util/typingfn\";\nimport { removeSessionData } from \"../../../util/sessionData\";\n\nclass Channel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userID: this.props.user.userID,\n      modal: false,\n      channelName: \"\",\n      channelDetail: \"\",\n      channelRef: firebase.database().ref(\"channels\"),\n      messageRef: firebase.database().ref(\"messages\"),\n      notificationRef: firebase.database().ref(\"notification\"),\n      activeChannelID: \"\",\n      firstChannelActivated: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.addListener();\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  addListener = () => {\n    let loadedChannel = [];\n    this.displayNotification();\n    this.state.channelRef.on(\"child_added\", snap => {\n      this.setState({ loading: true });\n      this.props.channelID(snap.val().id);\n      loadedChannel.push(snap.val());\n      this.props.setOtherChannels(loadedChannel);\n      this.setFirstChannel();\n      this.checkNotification(snap.val().id);\n      this.setState({ loading: false });\n    });\n  };\n  removeListener = () => {\n    this.state.channelRef.off();\n  };\n\n  setFirstChannel = () => {\n    const { firstChannelActivated } = this.state;\n    const { channels } = this.props;\n    if (!firstChannelActivated) {\n      this.setState({ firstChannelActivated: true });\n      this.changeChannel(channels[0]);\n    }\n  };\n\n  handleOpenModal = () => {\n    this.setState({ modal: true });\n  };\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = () => {\n    let { channelName, channelDetail, channelRef, userID } = this.state;\n    if (this.isFormValid(channelName, channelDetail)) {\n      const key = channelRef.push().key;\n      this.props.channelID(key);\n      channelRef\n        .child(key)\n        .update({\n          id: key,\n          channelName,\n          channelDetail,\n          createdBy: userID,\n          createdOn: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          this.setState({\n            channelName: \"\",\n            channelDetail: \"\"\n          });\n          this.props.setActiveChannelID(key);\n          this.handleCloseModal();\n        });\n    }\n  };\n  isFormValid = (channelName, channelDetail) => {\n    return channelName.length && channelDetail.length;\n  };\n\n  changeChannel = channel => {\n    if (channel.id !== this.props.channel.id) {\n      removeSessionData(\"time\");\n      this.props.setActiveChannelID(channel.id);\n      this.props.channelInStore({ ...channel });\n      this.props.setPrivateChannel(false);\n      notify.clearNotification(channel.id, this.state.userID);\n      this.props.clearMessages();\n    }\n  };\n\n  checkNotification = channelID => {\n    const { messageRef } = this.state;\n    messageRef.child(channelID).on(\"value\", snap => {\n      notify.createNotificationArray(\n        snap.numChildren(),\n        channelID,\n        this.state.userID,\n        this.props.activeChannelID\n      );\n    });\n  };\n\n  displayNotification = () => {\n    const { notificationRef, userID } = this.state;\n    notificationRef.child(userID).on(\"value\", snap => {\n      let notification = [];\n      for (let info in snap.val()) {\n        notification.push(snap.val()[info]);\n      }\n      this.props.setNotification(notification);\n    });\n  };\n\n  render() {\n    const { modal, channelName, channelDetail, loading } = this.state;\n    const {\n      channels,\n      activeChannelID,\n      user,\n      notification,\n      closedSidebar\n    } = this.props;\n    return (\n      <React.Fragment>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <React.Fragment>\n            <Menu.Menu>\n              <Menu.Item className=\"sidebar-heading\">\n                <span style={{ fontWeight: \"bold\", color: user.color.text }}>\n                  <Icon name=\"discussions\" /> Channel ({channels.length})\n                  <Icon\n                    style={{ float: \"right\", cursor: \"pointer\" }}\n                    name=\"add\"\n                    onClick={this.handleOpenModal}\n                  />\n                </span>\n              </Menu.Item>\n              <DisplayChannel\n                hideStarredID={user[\"starred\"] ? user[\"starred\"] : []}\n                channels={channels}\n                textColor={user.color.text}\n                activeChannelID={activeChannelID}\n                notification={notification}\n                changeChannel={channel => {\n                  typeFn.typingRemove(this.props.channel, user);\n                  this.changeChannel(channel);\n                }}\n                closedSidebar={closedSidebar}\n              />\n            </Menu.Menu>\n            <Modal open={modal} basic onClose={this.handleCloseModal}>\n              <Modal.Header>Add a Channel</Modal.Header>\n              <Modal.Content>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Field>\n                    <Input\n                      fluid\n                      label=\"Name of Channel\"\n                      name=\"channelName\"\n                      onChange={this.handleChange}\n                      value={channelName}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <Input\n                      fluid\n                      label=\"About the Channel\"\n                      name=\"channelDetail\"\n                      onChange={this.handleChange}\n                      value={channelDetail}\n                    />\n                  </Form.Field>\n                </Form>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button color=\"red\" inverted onClick={this.handleCloseModal}>\n                  <Icon name=\"remove\" /> No\n                </Button>\n                <Button color=\"green\" inverted onClick={this.handleSubmit}>\n                  <Icon name=\"checkmark\" /> Yes\n                </Button>\n              </Modal.Actions>\n            </Modal>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ channel, notification }) => {\n  return {\n    activeChannelID: channel.activeChannelID,\n    channels: channel.otherChannels,\n    notification: notification.notification,\n    channel: channel.currentChannel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    channelInStore: channelInfo => dispatch(setChannel(channelInfo)),\n    channelID: id => dispatch(setChannelID(id)),\n    setPrivateChannel: isPrivate => dispatch(setPrivateChannel(isPrivate)),\n    setActiveChannelID: id => dispatch(setActiveChannelID(id)),\n    setOtherChannels: channels => dispatch(setOtherChannels(channels)),\n    setNotification: notifications => dispatch(setNotification(notifications)),\n    clearMessages: () => dispatch(clearMessages())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Channel);\n","import React from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../../../util/firebaseConfig\";\nimport DisplayChannel from \"../SidePanel/DisplayChannel\";\nimport {\n  setChannel,\n  setPrivateChannel,\n  setActiveChannelID,\n  setOtherUsers,\n  setNotification,\n  clearMessages\n} from \"../../../store/action\";\nimport Spinner from \"../../Spinner\";\nimport * as notify from \"../../../util/notification\";\nimport generateId from \"../../../util/directmessage\";\nimport * as typeFn from \"../../../util/typingfn\";\nimport { removeSessionData } from \"../../../util/sessionData\";\n\nclass DirectMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userRef: firebase.database().ref(\"users\"),\n      messageRef: firebase.database().ref(\"messages\"),\n      notificationRef: firebase.database().ref(\"notification\"),\n      activeChannel: \"\",\n      loading: false\n    };\n  }\n  componentDidMount() {\n    const { userRef } = this.state;\n    const { user } = this.props;\n    let loadedUsers = [];\n    this.displayNotification();\n    userRef.on(\"child_added\", snap => {\n      this.setState({ loading: true });\n      if (user.userID !== snap.val().userID) {\n        loadedUsers.push(snap.val());\n        this.props.setOtherUsers(loadedUsers);\n        this.checkNotification(generateId(snap.val(), this.props.user.userID));\n        this.setState({ loading: false });\n      }\n    });\n\n    userRef.on(\"child_changed\", snap => {\n      if (user.userID !== snap.val().userID) {\n        let userID = snap.val().userID;\n        let index = this.props.totalUsers.findIndex(\n          user => user.userID === userID\n        );\n        let newtotalUsers = [...this.props.totalUsers];\n        newtotalUsers[index] = snap.val();\n        this.props.setOtherUsers(newtotalUsers);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.userRef.off();\n  }\n\n  changeChannel = user => {\n    if (generateId(user, this.props.user.userID) !== this.props.channel.id) {\n      removeSessionData(\"time\");\n      this.props.setActiveChannelID(user.userID);\n      this.props.setChannel({\n        channelName: user.username,\n        id: generateId(user, this.props.user.userID)\n      });\n      this.props.setPrivateChannel(true);\n      notify.clearNotification(\n        generateId(user, this.props.user.userID),\n        this.props.user.userID\n      );\n      this.props.clearMessages();\n    }\n  };\n\n  checkNotification = channelID => {\n    const { messageRef } = this.state;\n    messageRef.child(channelID).on(\"value\", snap => {\n      notify.createNotificationArray(\n        snap.numChildren(),\n        channelID,\n        this.props.user.userID,\n        this.props.activeChannelID\n      );\n    });\n  };\n\n  displayNotification = () => {\n    const { notificationRef } = this.state;\n    const { userID } = this.props.user;\n    notificationRef.child(userID).on(\"value\", snap => {\n      let notification = [];\n      for (let info in snap.val()) {\n        notification.push(snap.val()[info]);\n      }\n      this.props.setNotification(notification);\n    });\n  };\n\n  render() {\n    const { loading } = this.state;\n    const {\n      activeChannelID,\n      user,\n      totalUsers,\n      notification,\n      channel,\n      closedSidebar\n    } = this.props;\n    return (\n      <React.Fragment>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <Menu.Menu style={{ marginTop: \"2rem\" }}>\n            <Menu.Item className=\"sidebar-heading\">\n              <span style={{ fontWeight: \"bold\", color: user.color.text }}>\n                <Icon name=\"envelope\" /> Direct Messages {` `} (\n                {totalUsers.length})\n              </span>\n            </Menu.Item>\n            {totalUsers.length ? (\n              <DisplayChannel\n                hideStarredID={user[\"starred\"] ? user[\"starred\"] : []}\n                users={totalUsers}\n                activeChannelID={activeChannelID}\n                notification={notification}\n                userID={user.userID}\n                textColor={user.color.text}\n                changeChannel={user => {\n                  typeFn.typingRemove(channel, this.props.user);\n                  this.changeChannel(user);\n                }}\n                closedSidebar={closedSidebar}\n              />\n            ) : (\n              \"\"\n            )}\n          </Menu.Menu>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ channel, user, notification }) => {\n  return {\n    activeChannelID: channel.activeChannelID,\n    totalUsers: user.otherUsers,\n    notification: notification.notification,\n    channel: channel.currentChannel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveChannelID: id => dispatch(setActiveChannelID(id)),\n    setPrivateChannel: isPrivate => dispatch(setPrivateChannel(isPrivate)),\n    setChannel: channelInfo => dispatch(setChannel(channelInfo)),\n    setOtherUsers: users => dispatch(setOtherUsers(users)),\n    setNotification: notifications => dispatch(setNotification(notifications)),\n    clearMessages: () => dispatch(clearMessages())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DirectMessage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport DisplayChannel from \"./DisplayChannel\";\nimport {\n  setChannel,\n  setPrivateChannel,\n  setActiveChannelID,\n  setNotification,\n  clearMessages\n} from \"../../../store/action\";\nimport firebase from \"../../../util/firebaseConfig\";\nimport * as notify from \"../../../util/notification\";\nimport generateId from \"../../../util/directmessage\";\nimport { removeSessionData } from \"../../../util/sessionData\";\n\nclass Starred extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideStarredID_ForChannel: [],\n      hideStarredID_ForUser: [],\n      messageRef: firebase.database().ref(\"messages\"),\n      notificationRef: firebase.database().ref(\"notification\")\n    };\n  }\n  componentDidMount() {\n    this.displayNotification();\n    this.findHiddenStarredID();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.starred !== this.props.starred) this.findHiddenStarredID();\n  }\n\n  findHiddenStarredID = () => {\n    const { otherUsers, channelIDs, starred } = this.props;\n    let hideForChannel = channelIDs.reduce((acc, channel_id) => {\n      let result = starred.includes(channel_id);\n      if (!result && (acc.length === 0 || !acc.includes(result))) {\n        this.checkNotificationChannel(channel_id);\n        return acc.concat(channel_id);\n      }\n      return acc;\n    }, []);\n    this.setState({ hideStarredID_ForChannel: hideForChannel });\n\n    let hideForUser = otherUsers.reduce((acc, user) => {\n      let result = starred.includes(user.userID);\n      if (!result && (acc.length === 0 || !acc.includes(result))) {\n        this.checkNotificationUser(generateId(user, this.props.user.userID));\n        return acc.concat(user.userID);\n      }\n      return acc;\n    }, []);\n    this.setState({ hideStarredID_ForUser: hideForUser });\n  };\n\n  changeChannel = channel => {\n    if (channel.id !== this.props.channel.id) {\n      removeSessionData(\"time\");\n      this.props.setActiveChannelID(channel.id);\n      this.props.setChannel({ ...channel });\n      this.props.setPrivateChannel(false);\n      notify.clearNotification(channel.id, this.props.user.userID);\n      this.props.clearMessages();\n    }\n  };\n\n  changeUser = user => {\n    if (generateId(user, this.props.user.userID) !== this.props.channel.id) {\n      removeSessionData(\"time\");\n      this.props.setActiveChannelID(user.userID);\n      this.props.setChannel({\n        channelName: user.username,\n        id: generateId(user, this.props.user.userID)\n      });\n      this.props.setPrivateChannel(true);\n      notify.clearNotification(\n        generateId(user, this.props.user.userID),\n        this.props.user.userID\n      );\n      this.props.clearMessages();\n    }\n  };\n\n  checkNotificationChannel = channelID => {\n    const { messageRef } = this.state;\n    messageRef.child(channelID).on(\"value\", snap => {\n      notify.createNotificationArray(\n        snap.numChildren(),\n        channelID,\n        this.props.user.userID,\n        this.props.activeChannelID\n      );\n    });\n  };\n\n  checkNotificationUser = channelID => {\n    const { messageRef } = this.state;\n    messageRef.child(channelID).on(\"value\", snap => {\n      notify.createNotificationArray(\n        snap.numChildren(),\n        channelID,\n        this.props.user.userID,\n        this.props.activeChannelID\n      );\n    });\n  };\n\n  displayNotification = () => {\n    const { notificationRef } = this.state;\n    const { userID } = this.props.user;\n    notificationRef.child(userID).on(\"value\", snap => {\n      let notification = [];\n      for (let info in snap.val()) {\n        notification.push(snap.val()[info]);\n      }\n      this.props.setNotification(notification);\n    });\n  };\n\n  render() {\n    const { hideStarredID_ForChannel, hideStarredID_ForUser } = this.state;\n    const {\n      otherChannels,\n      otherUsers,\n      activeChannelID,\n      user,\n      notification,\n      closedSidebar\n    } = this.props;\n    return (\n      <Menu.Menu style={{ marginBottom: \"2rem\" }}>\n        <Menu.Item className=\"sidebar-heading\">\n          <span style={{ fontWeight: \"bold\", color: user.color.text }}>\n            <Icon name=\"star\" /> Starred\n          </span>\n        </Menu.Item>\n        <DisplayChannel\n          hideStarredID={hideStarredID_ForChannel}\n          textColor={user.color.text}\n          channels={otherChannels}\n          activeChannelID={activeChannelID}\n          notification={notification}\n          changeChannel={channel => {\n            this.changeChannel(channel);\n          }}\n          closedSidebar={closedSidebar}\n        />\n        <DisplayChannel\n          hideStarredID={hideStarredID_ForUser}\n          textColor={user.color.text}\n          users={otherUsers}\n          activeChannelID={activeChannelID}\n          notification={notification}\n          userID={user.userID}\n          changeChannel={user => {\n            this.changeUser(user);\n          }}\n          closedSidebar={closedSidebar}\n        />\n      </Menu.Menu>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user, channel, notification }) => {\n  return {\n    otherUsers: user.otherUsers,\n    otherChannels: channel.otherChannels,\n    channelIDs: channel.channelIDs,\n    activeChannelID: channel.activeChannelID,\n    starred: user.currentUser.starred.split(\",\"),\n    user: user.currentUser,\n    channel: channel.currentChannel,\n    notification: notification.notification\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveChannelID: id => dispatch(setActiveChannelID(id)),\n    setPrivateChannel: isPrivate => dispatch(setPrivateChannel(isPrivate)),\n    setChannel: channelInfo => dispatch(setChannel(channelInfo)),\n    setNotification: notifications => dispatch(setNotification(notifications)),\n    clearMessages: () => dispatch(clearMessages())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Starred);\n","import React from \"react\";\nimport { Menu, Sidebar } from \"semantic-ui-react\";\nimport UserPanel from \"./UserPanel\";\nimport Channel from \"./Channel\";\nimport DirectMessage from \"./DirectMessages\";\nimport Starred from \"./Starred\";\n\nconst SidePanel = ({ user, visibleSideBar, showSidebar }) => {\n  const style = {\n    background: user.color.theme[0],\n    width: \"17rem\",\n    fontSize: \"1.3rem\",\n    zIndex: 500\n  };\n  return (\n    <Sidebar\n      as={Menu}\n      direction=\"right\"\n      animation=\"overlay\"\n      icon=\"labeled\"\n      inverted\n      vertical\n      visible={visibleSideBar}\n      style={{ ...style }}\n    >\n      <UserPanel user={user} />\n      {user[\"starred\"] ? <Starred closedSidebar={showSidebar} /> : null}\n      <Channel user={user} closedSidebar={showSidebar} />\n      <DirectMessage user={user} closedSidebar={showSidebar} />\n    </Sidebar>\n    // <Menu inverted fixed=\"right\" vertical style={{ ...style }}>\n    //   <UserPanel user={user} />\n    //   {user[\"starred\"] ? <Starred /> : null}\n    //   <Channel user={user} />\n    //   <DirectMessage user={user} />\n    // </Menu>\n  );\n};\n\nexport default SidePanel;\n","import React from \"react\";\nimport moment from \"moment\";\nimport firebase from \"../../../util/firebaseConfig\";\nimport {\n  Segment,\n  Header,\n  Icon,\n  Input,\n  Modal,\n  Form,\n  Button,\n  Label\n} from \"semantic-ui-react\";\n\nclass MessageHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userRef: firebase.database().ref(\"users\"),\n      screenWidth: window.innerWidth,\n      modal: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", () => {\n      this.setState({ screenWidth: window.innerWidth });\n    });\n  }\n\n  starredChannel = () => {\n    const { activeChannelID, user } = this.props;\n    const { userRef } = this.state;\n    let prevStarred = user.starred ? user[\"starred\"].split(\",\") : [];\n    let index = prevStarred.findIndex(id => id === activeChannelID);\n    if (index > -1) {\n      prevStarred.splice(index, 1);\n    } else {\n      prevStarred.push(activeChannelID);\n    }\n    userRef.child(user.userID).set({ ...user, starred: prevStarred.join(\",\") });\n  };\n\n  handleChange = event => {\n    this.props.searchMessage(event.target.value);\n  };\n\n  handleOpenModal = () => {\n    this.setState({ modal: true });\n  };\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    const {\n      channelName,\n      metaData,\n      searchLoading,\n      privateChannel,\n      activeChannelID,\n      user,\n      showChannelInfo,\n      hasSearchData,\n      clearSearchData\n    } = this.props;\n    const { screenWidth, modal } = this.state;\n    return (\n      <Segment clearing className=\"messageHeader\">\n        <Header as=\"h2\" floated=\"left\" fluid=\"true\" style={{ marginBottom: 0 }}>\n          <span>\n            {channelName}\n            <Icon\n              style={{ cursor: \"pointer\" }}\n              name={\n                user[\"starred\"] && user[\"starred\"].includes(activeChannelID)\n                  ? \"star\"\n                  : \"star outline\"\n              }\n              color={\n                user[\"starred\"] && user[\"starred\"].includes(activeChannelID)\n                  ? \"yellow\"\n                  : \"black\"\n              }\n              onClick={this.starredChannel}\n            />\n          </span>\n          <Header.Subheader>\n            {privateChannel ? (\n              metaData.status === \"offline\" ? (\n                moment(metaData.lastSeen).format(\" Do-MM-YY, ddd, h:mm a\")\n              ) : (\n                <span>\n                  {\" \"}\n                  <Icon name=\"circle\" color=\"green\" /> Online\n                </span>\n              )\n            ) : metaData.length > 1 ? (\n              `${metaData.length} users`\n            ) : (\n              `${metaData.length} user`\n            )}\n          </Header.Subheader>\n        </Header>\n        <Header floated=\"right\">\n          {screenWidth > 678 ? (\n            <Input\n              size=\"mini\"\n              icon=\"search\"\n              name=\"searchTerm\"\n              onChange={this.handleChange}\n              loading={searchLoading}\n              placeholder=\"Search...\"\n            />\n          ) : hasSearchData ? (\n            <Label\n              color=\"red\"\n              style={{\n                cursor: \"pointer\",\n                position: \"absolute\",\n                right: \"52px\",\n                top: \"21px\"\n              }}\n              onClick={clearSearchData}\n            >\n              <Icon name=\"search\" /> Clear\n            </Label>\n          ) : (\n            <Icon\n              name=\"search\"\n              color=\"grey\"\n              style={{ cursor: \"pointer\" }}\n              onClick={this.handleOpenModal}\n            />\n          )}\n          {!privateChannel && (\n            <Icon\n              name=\"info\"\n              color=\"grey\"\n              style={{ cursor: \"pointer\" }}\n              onClick={showChannelInfo}\n            />\n          )}\n        </Header>\n        <Modal open={modal} basic onClose={this.handleCloseModal}>\n          <Modal.Content>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  name=\"searchItem\"\n                  onChange={this.handleChange}\n                  placeholder=\"Search...\"\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleCloseModal}>\n              <Icon name=\"checkmark\" /> Done\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Segment>\n    );\n  }\n}\n\nexport default MessageHeader;\n","import React from 'react';\nimport { Button, Input, Icon, Modal, Header } from \"semantic-ui-react\";\n\nclass FileModal extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            file: null\n        }\n    }\n    addFile = (event) => {\n        this.setState({file: event.target.files[0]})\n    }\n\n    sendFile = () => {\n        const { file } = this.state;\n        if(file){\n            this.props.uploadFile(file);\n            this.props.closeModal();\n            this.setState({file: null})\n        }\n    }\n    render(){\n        const { modal, closeModal } = this.props;\n        return(\n            <Modal basic open={modal}>\n              <Header>Select a Image File</Header>\n              <Modal.Content>\n                  <Input \n                    fluid\n                    label=\"File type: jpg/png\"\n                    type=\"file\"\n                    accept=\"image/png, image/jpeg\"\n                    onChange={this.addFile}\n                  />   \n              </Modal.Content>\n              <Modal.Actions>\n                <Button color=\"red\" inverted onClick={closeModal}>\n                  <Icon name=\"remove\" />Cancel\n                </Button>\n                <Button color=\"green\" inverted onClick={this.sendFile}>\n                  <Icon name=\"checkmark\" />Send\n                </Button>\n              </Modal.Actions>\n            </Modal>\n        );\n    }\n    \n}\n\nexport default FileModal;","import React from \"react\";\n\nconst Typing = ({ typingUsers }) => {\n  return (\n    <div className=\"typing\">\n      {typingUsers.map((u, index) => {\n        if (index !== typingUsers.length - 1) return <span key={index}>{u}, </span>;\n        return <span key={index}>{u} </span>;\n      })}\n      <span>is typing...</span>\n    </div>\n  );\n};\n\nexport default Typing;\n","import React from \"react\";\nimport { Picker } from \"emoji-mart\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nclass Emoji extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openPicker: false\n    };\n  }\n\n  addEmoji = e => {\n    let emojiPic = \"\";\n    if (e.unified.length <= 5) {\n      emojiPic = String.fromCodePoint(`0x${e.unified}`);\n    } else {\n      let sym = e.unified.split(\"-\");\n      let codesArray = [];\n      sym.forEach(el => codesArray.push(\"0x\" + el));\n      emojiPic = String.fromCodePoint(...codesArray);\n    }\n    if (this.props.onSelect) this.props.onSelect(emojiPic);\n  };\n\n  openEmojiPicker = () => {\n    this.setState(prevState => {\n      return { openPicker: !prevState.openPicker };\n    });\n  };\n\n  render() {\n    const { openPicker } = this.state;\n    return (\n      <div\n        onClick={this.openEmojiPicker}\n        style={{\n          padding: \"0px 3px 0px 5px\",\n          border: \"1px solid #e2b605\",\n          display: \"flex\",\n          marginRight: \"1px\",\n          alignItems: \"center\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        }}\n      >\n        <Icon\n          name=\"smile outline\"\n          style={{ fontSize: \"20px\", color: \"#e2b605\" }}\n        />\n        {openPicker && (\n          <Picker\n            set=\"google\"\n            onSelect={this.addEmoji}\n            title=\"Pick your emoji...\"\n            style={{\n              width: \"293px\",\n              position: \"absolute\",\n              left: \"0px\",\n              bottom: \"38px\"\n            }}\n            showPreview={false}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Emoji;\n","/* eslint-disable no-useless-escape */\nimport * as React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Segment, Button, Progress, Form } from \"semantic-ui-react\";\nimport firebase from \"../../../util/firebaseConfig\";\nimport FileModal from \"./FileModal\";\nimport Typing from \"./Typing\";\nimport * as typeFn from \"../../../util/typingfn\";\nimport * as session from \"../../../util/sessionData\";\nimport Emoji from \"./Emoji\";\n\nclass MessageForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      storageRef: firebase.storage().ref(),\n      message: \"\",\n      file: \"\",\n      loading: false,\n      error: [],\n      modal: false,\n      uploadTask: null,\n      uploadStatus: \"\",\n      uploadPercentage: 0,\n      cursorPos: 0,\n      selectedText: \"\",\n      selectedPosition: {\n        start: null,\n        end: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getStoragedData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.channel.channelName !== this.props.channel.channelName)\n      this.getStoragedData();\n  }\n\n  getStoragedData() {\n    if (session.getSessionData(this.props.channel.id))\n      this.setState({ message: session.getSessionData(this.props.channel.id) });\n    else this.setState({ message: \"\" });\n  }\n\n  getMessage = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    typeFn.typingAdd(event.target.value, this.props.channel, this.props.user);\n    if (event.target.value)\n      session.addSessionData(this.props.channel.id, event.target.value);\n    else session.removeSessionData(this.props.channel.id);\n    this.setState({\n      cursorPos: event.target.selectionStart\n    });\n  };\n\n  formatting = (message, text, replaceText, trim) => {\n    if (replaceText) {\n      for (let t of replaceText) {\n        let htmlData =\n          text === \"blockquote\"\n            ? t.slice(trim, t.length)\n            : t.slice(trim, t.length - trim);\n        message = message.replace(t, `<${text}>${htmlData} </${text}>`);\n      }\n    }\n    return message;\n  };\n\n  formattedMessage = message => {\n    message = message.replace(/\\r?\\n/g, \"<br>\");\n\n    const blockQuote = message.match(/(<br>+>>>|^>>>).+\\w\\S/g);\n    message = this.formatting(message, \"blockquote\", blockQuote, 3);\n\n    message = message.replace(/<br>/g, \"%\");\n\n    let oneLineQuote = message.match(/(%>+|^>+)[^%]+(?!=%)/g);\n    if (oneLineQuote) {\n      for (let quote of oneLineQuote) {\n        quote = quote.replace(/^(?:%)+/g, \"\");\n        message = message.replace(\n          quote,\n          `<blockquote>${quote.slice(1, quote.length)} </blockquote>`\n        );\n      }\n    }\n\n    const boldDetector = message.match(\n      /(?<=\\s|^|%|_|~|`|>)(\\*[^%\\*.]+\\*)(?=\\s|%|_|~|`|<|$)/g\n    );\n\n    message = this.formatting(message, \"b\", boldDetector, 1);\n    const italicDetector = message.match(\n      /(?<=\\s|^|%|\\*|~|`|>)(_[^%_.]+_)(?=\\s|%|\\*|~|`|<|$)/g\n    );\n    message = this.formatting(message, \"i\", italicDetector, 1);\n\n    const strikeThrough = message.match(\n      /(?<=\\s|^|%|_|\\*|`|>)(~[^%~.]+~)(?=\\s|%|\\*|_|`|<|$)/g\n    );\n    message = this.formatting(message, \"strike\", strikeThrough, 1);\n\n    const blockCode = message.match(/```.+?```/g);\n    if (blockCode) {\n      let messageForInlineCode;\n      for (let m of blockCode) {\n        messageForInlineCode = message.replace(m, \"\");\n      }\n      message = this.formatting(message, \"pre\", blockCode, 3);\n      const inlineCode = messageForInlineCode.match(/(?<=\\s|^|%)(`[^%`.]+`)/g);\n      message = this.formatting(message, \"code\", inlineCode, 1);\n    } else {\n      const inlineCode = message.match(/(?<=\\s|^|%)(`[^%`.]+`)/g);\n      message = this.formatting(message, \"code\", inlineCode, 1);\n    }\n    // return message.replace(/\\s/g, \"&nbsp;\");\n    message = message.replace(/%/g, \"<br>\");\n    this.setState({ message });\n    return message;\n  };\n\n  createMessage = (user, message) => {\n    const { file } = this.state;\n    const messageObj = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      userID: user.userID\n    };\n    if (file !== \"\") {\n      messageObj[\"image\"] = file;\n    } else {\n      messageObj[\"content\"] = message;\n    }\n    return messageObj;\n  };\n\n  sendMessage = () => {\n    const { messageRef, channel, user } = this.props;\n    const { message, error } = this.state;\n\n    if (message.trim()) {\n      this.setState({ loading: true });\n      messageRef\n        .child(channel.id)\n        .push()\n        .set(this.createMessage(user, this.formattedMessage(message)))\n        .then(() => {\n          this.setState({ loading: false, message: \"\", error: [] });\n          typeFn.typingRemove(channel, user);\n          session.removeSessionData(channel.id);\n        })\n        .catch(() => {\n          this.setState({\n            loading: false,\n            error: error.concat(\"message can't be send. Try Again !!\")\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n        error: error.concat(\"write the message\")\n      });\n    }\n  };\n\n  sendFileMessage = pathToUpload => {\n    const { messageRef, user } = this.props;\n    const { error } = this.state;\n\n    messageRef\n      .child(pathToUpload.id)\n      .push()\n      .set(this.createMessage(user))\n      .then(() => {\n        this.setState({\n          file: \"\",\n          uploadStatus: \"done\",\n          error: []\n        });\n      })\n      .catch(() => {\n        this.setState({\n          loading: false,\n          uploadStatus: \"fail\",\n          error: error.concat(\n            \" Error in Uploading file in Database. Try Again!! \"\n          )\n        });\n      });\n  };\n\n  getSelectionPosition = event => {\n    this.setState({\n      selectedText: window.getSelection().toString(),\n      selectedPosition: {\n        start: event.target.selectionStart,\n        end: event.target.selectionEnd\n      }\n    });\n  };\n\n  openModal = () => {\n    this.setState({ modal: true });\n  };\n\n  closeModal = () => {\n    this.setState({ modal: false });\n  };\n\n  uploadFile = file => {\n    const pathToUpload = this.props.channel;\n    const metaData = { contentType: file.type };\n    const { storageRef } = this.state;\n\n    this.setState(\n      {\n        uploadTask: storageRef\n          .child(`${pathToUpload.channelName}/images/${uuidv4()}.jpg`)\n          .put(file, metaData),\n        uploadStatus: \"uploading\"\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snapshot => {\n            let uploadPercentage = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            this.setState({ uploadPercentage });\n          },\n          error => {\n            this.setState({\n              error: this.state.error.concat(error.message),\n              uploadTask: \"\",\n              uploadStatus: \"fail\"\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadURL => {\n                this.setState({ file: downloadURL, uploadTask: \"\" });\n                this.sendFileMessage(pathToUpload);\n              })\n              .catch(err => {\n                this.setState({\n                  error: this.state.error.push(err),\n                  uploadTask: \"\",\n                  uploadStatus: \"fail\"\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  addEmoji = emoji => {\n    const { message, cursorPos } = this.state;\n    const part1 = message.slice(0, cursorPos);\n    const part2 = message.slice(cursorPos);\n    this.setState({ message: `${part1}${emoji}${part2}` });\n  };\n\n  handleCommand = event => {\n    if (event.key.toLowerCase() === \"j\") event.preventDefault();\n    if (event.ctrlKey && event.key === \"Enter\") this.sendMessage();\n    else if (event.ctrlKey && event.key.toLowerCase() === \"b\")\n      this.formatTextAreaMessage(\"*\");\n    else if (event.ctrlKey && event.key.toLowerCase() === \"i\")\n      this.formatTextAreaMessage(\"_\");\n    else if (event.ctrlKey && event.key.toLowerCase() === \"j\")\n      this.formatTextAreaMessage(\"```\");\n  };\n\n  formatTextAreaMessage = tag => {\n    const { message, selectedPosition, selectedText } = this.state;\n\n    let textBeforeSelection = message.substring(0, selectedPosition.start);\n    let textAfterSelection = message.substring(\n      selectedPosition.end,\n      message.length\n    );\n\n    this.setState({\n      message: `${textBeforeSelection} ${tag}${selectedText}${tag} ${textAfterSelection}`\n    });\n  };\n\n  render() {\n    const {\n      message,\n      loading,\n      modal,\n      uploadStatus,\n      uploadPercentage\n    } = this.state;\n    const { user, typingUsers, sideBarVisible } = this.props;\n    const btn1 = user.color.theme[1];\n    const btn2 = user.color.theme[2];\n    return (\n      <Segment\n        className={\n          typingUsers.length ? \"messageForm typingSpace\" : \"messageForm\"\n        }\n        fluid={true.toString()}\n      >\n        {typingUsers.length ? <Typing typingUsers={typingUsers} /> : null}\n        {uploadStatus === \"uploading\" ? (\n          <Progress\n            style={{\n              position: \"fixed\",\n              top: \"12%\",\n              left: \"66px\",\n              right: sideBarVisible ? \"260px\" : \"14px\"\n            }}\n            percent={uploadPercentage}\n            inverted\n            progress\n            color=\"green\"\n          />\n        ) : (\n          \"\"\n        )}\n        <Form>\n          <div className=\"editor\">\n            <TextareaAutosize\n              ref={ref => (this.input = ref)}\n              placeholder=\"Write your message...\"\n              onClick={this.getMessage}\n              onKeyDown={this.handleCommand}\n              name=\"message\"\n              value={message}\n              onChange={this.getMessage}\n              onSelect={this.getSelectionPosition}\n              style={{\n                maxHeight: \"175px\",\n                minHeight: \"41px\"\n              }}\n            />\n          </div>\n        </Form>\n\n        {/* <Input\n            fluid\n            style={{ marginBottom: \"0.7rem\" }}\n            label={\n              <Emoji\n                onSelect={emoji => {\n                  this.addEmoji(emoji);\n                }}\n              />\n            }\n            value={message}\n            onChange={this.getMessage}\n            loading={loading}\n            labelPosition=\"left\"\n            placeholder=\"Write your message...\"\n            className={error.some(err => err.includes(\"message\")) ? \"error\" : \"\"}\n          /> */}\n        <Button.Group icon width=\"3\" fluid className=\"ctlBtn\">\n          <Emoji\n            onSelect={emoji => {\n              this.addEmoji(emoji);\n            }}\n          />\n          <Button\n            style={{ backgroundColor: btn1, color: user.color.text }}\n            color=\"orange\"\n            content=\"Add Reply\"\n            disabled={loading}\n            icon=\"edit\"\n            labelPosition=\"left\"\n            onClick={this.sendMessage}\n          />\n          <Button\n            style={{ backgroundColor: btn2, color: user.color.text }}\n            color=\"teal\"\n            content=\"Add File\"\n            disabled={uploadStatus === \"uploading\"}\n            icon=\"upload\"\n            labelPosition=\"left\"\n            onClick={this.openModal}\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\nimport { addSessionData, getSessionData } from \"../../../util/sessionData\";\n\nconst Message = ({ msg, user, allUsers }) => {\n  const isContent = () => {\n    return msg.hasOwnProperty(\"content\");\n  };\n  const msgUser = allUsers.find(u => msg.userID === u.userID);\n  const createGroup =\n    getSessionData(\"time\") === moment(msg.timestamp).format(\"Do-MM-YY\");\n  addSessionData(\"time\", moment(msg.timestamp).format(\"Do-MM-YY\"));\n  let todayMsg =\n    moment(msg.timestamp).format(\"Do-MM-YY\") ===\n    moment(new Date()).format(\"Do-MM-YY\");\n  return (\n    <React.Fragment>\n      {!createGroup ? (\n        <div className=\"dateGroup\">\n          <hr className=\"dateLine\" />\n          <span className=\"date\">\n            {todayMsg\n              ? `${moment(msg.timestamp).format(\"MMMM Do YYYY\")}, Today`\n              : moment(msg.timestamp).format(\"MMMM Do YYYY\")}\n          </span>\n        </div>\n      ) : null}\n      <Comment className=\"message-box\">\n        <Comment.Avatar src={msgUser.picture} />\n        <Comment.Content\n          className={user.userID === msgUser.userID ? \"userMessage\" : \"\"}\n        >\n          <Comment.Author as=\"a\">{msgUser.username}</Comment.Author>\n          <Comment.Metadata>\n            {moment(msg.timestamp).format(\"h:mm a\")}\n          </Comment.Metadata>\n          {isContent() ? (\n            <Comment.Text dangerouslySetInnerHTML={{ __html: msg.content }} />\n          ) : (\n            <a href={msg.image} target=\"_blank\" downloadable={true}>\n              <Image src={msg.image} size=\"medium\" rounded />\n            </a>\n          )}\n        </Comment.Content>\n      </Comment>\n    </React.Fragment>\n  );\n};\n\nexport default Message;\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Segment, Comment, Loader } from \"semantic-ui-react\";\nimport MessageHeader from \"./MessageHeader\";\nimport MessageForm from \"./MessageForm\";\nimport firebase from \"../../../util/firebaseConfig\";\nimport Message from \"./Message\";\nimport {\n  setUsersInChannel,\n  setShowChannelInfo,\n  setMessages\n} from \"../../../store/action\";\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageRef: firebase.database().ref(\"messages\"),\n      userRef: firebase.database().ref(\"users\"),\n      typingRef: firebase.database().ref(\"typing\"),\n      typingUsers: [],\n      channelUsers: [],\n      reachedDBEnd: false,\n      searchMsg: [],\n      searchLoading: false,\n      userInHeader: {},\n      hasSearchData: false,\n      connectionRef: firebase.database().ref(\".info/connected\")\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n    this.fetchMessage();\n    this.findTypingUsers();\n    this.state.connectionRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        this.state.typingRef\n          .child(this.props.channel.id)\n          .child(this.props.user.userID)\n          .onDisconnect()\n          .remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    this.scrollToBottom();\n    if (prevProps.channel.channelName !== this.props.channel.channelName) {\n      this.setState({ reachedDBEnd: false });\n      clearTimeout(this.time);\n      this.fetchMessage();\n      this.findTypingUsers();\n    }\n  }\n\n  scrollToBottom = () => {\n    if (this.scrollRef) this.scrollRef.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentWillUnmount() {\n    const { typingRef, connectionRef, messageRef } = this.state;\n    const { channel } = this.props;\n    typingRef.child(channel.id).off();\n    connectionRef.off();\n    messageRef.child(channel.id).off();\n  }\n\n  fetchMessage = () => {\n    const { messageRef } = this.state;\n    const { channel, channelIDs } = this.props;\n    let loadedMessage = [];\n    messageRef.once(\"value\", snap => {\n      if (snap.hasChild(channel.id)) {\n        messageRef.child(channel.id).on(\"child_added\", snapMsg => {\n          loadedMessage.push({\n            ...snapMsg.val()\n          });\n          if (channelIDs.includes(channel.id)) this.userCount(loadedMessage);\n          else this.props.setUsersInChannel([]);\n        });\n      } else {\n        this.props.setMessages([]);\n        if (channelIDs.includes(channel.id)) this.userCount(loadedMessage);\n        else this.props.setUsersInChannel([]);\n      }\n      this.setState({ reachedDBEnd: true });\n      this.props.setMessages(loadedMessage);\n    });\n  };\n\n  userCount = messages => {\n    const allUser = [...this.props.otherUsers, this.props.user];\n    if (messages.length) {\n      let users = messages.reduce((userArray, msg) => {\n        let msgUser = allUser.find(u => u.userID === msg.userID);\n        if (userArray.findIndex(obj => obj.name === msgUser.username) < 0)\n          return userArray.concat({\n            name: msgUser.username,\n            image: msgUser.picture\n          });\n        return userArray;\n      }, []);\n      this.props.setUsersInChannel(users);\n    } else {\n      this.props.setUsersInChannel([]);\n    }\n  };\n\n  findTypingUsers = () => {\n    const { typingRef } = this.state;\n    const { channel, user } = this.props;\n    typingRef.child(channel.id).on(\"value\", snap => {\n      let typerArray = [];\n      for (let u in snap.val()) {\n        if (user.userID !== u) typerArray.push(snap.val()[u]);\n      }\n      this.setState({ typingUsers: typerArray });\n    });\n  };\n\n  displayMessages = (messages, user, otherUsers) =>\n    messages.length > 0 &&\n    messages.map(msg => {\n      return (\n        <Message\n          msg={msg}\n          key={msg.timestamp}\n          user={user}\n          allUsers={[...otherUsers, user]}\n        />\n      );\n    });\n\n  //TODO: include search on complete message database --> (using channelIDs for this)\n  searchMessage = searchInput => {\n    const { messages, user, otherUsers } = this.props;\n    const allUsers = [user, ...otherUsers];\n    let regxExp = new RegExp(searchInput, \"gi\");\n    const userSearched = allUsers.find(u => Boolean(u.username.match(regxExp)));\n    console.log(userSearched);\n    this.setState({ searchLoading: true });\n\n    let searchMsg = messages.reduce((acc, msg) => {\n      if (\n        (msg.hasOwnProperty(\"content\") && msg[\"content\"].match(regxExp)) ||\n        (userSearched && msg.userID === userSearched.userID)\n      ) {\n        acc.push(msg);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchMsg, hasSearchData: !!searchInput });\n    setTimeout(() => {\n      this.setState({ searchLoading: false });\n    }, 1000);\n  };\n\n  metaData = () => {\n    const {\n      channelIDs,\n      channel,\n      user,\n      otherUsers,\n      usersInChannel\n    } = this.props;\n    if (channelIDs.includes(channel.id)) {\n      return usersInChannel;\n    } else {\n      const { userID } = user;\n      const regxExp = new RegExp(userID, \"gi\");\n      let id = channel[\"id\"].replace(regxExp, \"\");\n      let index = otherUsers.findIndex(user => user.userID === id);\n      return { ...otherUsers[index] };\n    }\n  };\n\n  clearSearchData = () => {\n    this.setState({ hasSearchData: false, searchMsg: [] });\n  };\n\n  render() {\n    const {\n      messageRef,\n      searchMsg,\n      searchLoading,\n      typingUsers,\n      inputValue,\n      reachedDBEnd,\n      hasSearchData\n    } = this.state;\n    const {\n      channel,\n      user,\n      privateChannel,\n      activeChannelID,\n      setShowChannelInfo,\n      otherUsers,\n      messages,\n      sideBar\n    } = this.props;\n    return (\n      <React.Fragment>\n        <MessageHeader\n          channelName={channel.channelName}\n          metaData={this.metaData()}\n          searchMessage={data => {\n            this.searchMessage(data);\n          }}\n          user={user}\n          activeChannelID={activeChannelID}\n          searchLoading={searchLoading}\n          hasSearchData={hasSearchData}\n          privateChannel={privateChannel}\n          showChannelInfo={() => {\n            setShowChannelInfo(true);\n          }}\n          clearSearchData={this.clearSearchData}\n        />\n        <Segment className=\"messages\">\n          {messages.length || reachedDBEnd ? (\n            <React.Fragment>\n              <Comment.Group size=\"large\">\n                {hasSearchData\n                  ? this.displayMessages(searchMsg, user, otherUsers)\n                  : this.displayMessages(messages, user, otherUsers)}\n              </Comment.Group>\n              <div\n                ref={scroll => {\n                  this.scrollRef = scroll;\n                }}\n              />\n            </React.Fragment>\n          ) : (\n            <Loader active>Loading Messages....</Loader>\n          )}\n        </Segment>\n        <MessageForm\n          messageRef={messageRef}\n          inputValue={inputValue}\n          channel={channel}\n          user={user}\n          typingUsers={typingUsers}\n          sideBarVisible={sideBar}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user, channel, messages }) => {\n  return {\n    user: user.currentUser,\n    otherUsers: user.otherUsers,\n    channel: channel.currentChannel,\n    activeChannelID: channel.activeChannelID,\n    channelIDs: channel.channelIDs,\n    privateChannel: channel.privateChannel,\n    usersInChannel: channel.usersInChannel,\n    messages: messages.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUsersInChannel: payload => dispatch(setUsersInChannel(payload)),\n    setShowChannelInfo: payload => dispatch(setShowChannelInfo(payload)),\n    setMessages: payload => dispatch(setMessages(payload))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Messages);\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Accordion, Icon, Header, Image } from \"semantic-ui-react\";\n\nexport default class MetaPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeIndex: 0 };\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  creator = () => {\n    const { otherUsers, user, channel } = this.props;\n    let isCreator = otherUsers.find(u => u.userID === channel.createdBy);\n    let creator = isCreator\n      ? { name: isCreator.username, image: isCreator.picture }\n      : { name: \"You\", image: user.picture };\n    return (\n      <Header as=\"h3\">\n        <Image circular src={creator.image} /> {creator.name}\n      </Header>\n    );\n  };\n\n  channelUsers = () => \n    this.props.usersInChannel.map((user,index) => (\n      <Header as=\"h5\" key={index} style={{margin: '6px 0px'}}>\n        <Image circular src={user.image} /> {user.name}\n      </Header>\n    ))\n\n  render() {\n    const { activeIndex } = this.state;\n    const { channel, showChannelInfo } = this.props;\n    return (\n      <Accordion styled>\n       <Icon name=\"close\" className=\"metapannel-close\" onClick={showChannelInfo}/>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          About Channel <Icon name=\"info circle\" />\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <p>\n            {channel.channelDetail}\n            <br />\n            Created On : {moment(channel.createdOn).format(\" Do MMMM YYYY \")}\n          </p>\n        </Accordion.Content>\n\n        <Accordion.Title\n          active={activeIndex === 1}\n          index={1}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Contributors <Icon name=\"users\" />\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 1}>\n          {this.channelUsers()}\n        </Accordion.Content>\n\n        <Accordion.Title\n          active={activeIndex === 2}\n          index={2}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Creator <Icon name=\"write\" />\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 2}>\n          {this.creator()}\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../../util/firebaseConfig\";\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\nimport { setShowChannelInfo } from \"../../store/action\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShow: false,\n      visible: window.innerWidth > 678\n    };\n  }\n  componentDidMount() {\n    this.checkWidth();\n    this.removeToken();\n    firebase.messaging().onTokenRefresh(\n      firebase\n        .messaging()\n        .requestPermission()\n        .then(() =>\n          firebase\n            .messaging()\n            .getToken()\n            .then(token => {\n              firebase\n                .database()\n                .ref(\"tokens\")\n                .push({\n                  token: token,\n                  uid: firebase.auth().currentUser.uid\n                });\n            })\n        )\n        .catch(err => {\n          console.log(\"Error Getting Permission\");\n        })\n    );\n  }\n\n  checkWidth = () => {\n    window.addEventListener(\"resize\", () => {\n      this.setState({ visible: window.innerWidth > 678 });\n    });\n  };\n\n  removeToken = () => {\n    firebase\n      .database()\n      .ref(\"tokens\")\n      .orderByChild(\"uid\")\n      .equalTo(firebase.auth().currentUser.uid)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.val()) {\n          const key = Object.keys(snapshot.val());\n          if (key.length > 1)\n            firebase\n              .database()\n              .ref(\"tokens\")\n              .child(key[0])\n              .remove();\n        }\n      });\n  };\n\n  showSidebar = () => {\n    this.setState(prevState => ({ isShow: !prevState.isShow }));\n  };\n\n  render() {\n    const {\n      user,\n      channel,\n      privateChannel,\n      otherUsers,\n      usersInChannel,\n      showChannelInfo\n    } = this.props;\n    const { visible, isShow } = this.state;\n    const visibleSideBar = visible ? visible : isShow;\n    return (\n      <Grid\n        columns=\"equal\"\n        style={{\n          background: \"#fff\",\n          marginTop: \"0px\",\n          height: \"100vh\",\n          margin: 0\n        }}\n      >\n        {/* <ColorPanel user={user} />\n        {user.userID && <SidePanel />}\n\n        <Grid.Column\n          style={{ marginLeft: \"312px\", position: \"relative\", paddingRight: 0 }}\n        >\n          {channel.id && <Messages />}\n        </Grid.Column>\n\n        {!privateChannel && showChannelInfo && otherUsers.length && (\n          <Grid.Column width={4}>\n            <MetaPanel\n              channel={channel}\n              otherUsers={otherUsers}\n              user={user}\n              usersInChannel={usersInChannel}\n              showChannelInfo={() => {\n                this.props.setShowChannelInfo(false);\n              }}\n            />\n          </Grid.Column>\n        )} */}\n        <Grid.Column className=\"my-container\">\n          {channel.id && <Messages sideBar={visible} />}\n        </Grid.Column>\n\n        {user.userID && (\n          <SidePanel\n            visibleSideBar={visibleSideBar}\n            user={user}\n            showSidebar={this.showSidebar}\n          />\n        )}\n\n        <ColorPanel user={user} showSidebar={this.showSidebar} />\n        {!privateChannel &&\n          showChannelInfo &&\n          otherUsers.length && (\n            <div className=\"metapannel-box\">\n              <MetaPanel\n                channel={channel}\n                otherUsers={otherUsers}\n                user={user}\n                usersInChannel={usersInChannel}\n                showChannelInfo={() => {\n                  this.props.setShowChannelInfo(false);\n                }}\n              />\n            </div>\n          )}\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user, channel }) => {\n  return {\n    user: user.currentUser,\n    otherUsers: user.otherUsers,\n    channel: channel.currentChannel,\n    privateChannel: channel.privateChannel,\n    usersInChannel: channel.usersInChannel,\n    showChannelInfo: channel.showChannelInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setShowChannelInfo: payload => dispatch(setShowChannelInfo(payload))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport Login from \"./Auth/Login\";\nimport Register from \"./Auth/Register\";\nimport Home from \"./Home/Home\";\nimport Spinner from \"./Spinner\";\nimport { setUser, clearUser } from \"../store/action\";\nimport \"./App.css\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      rest.isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connectionRef: firebase.database().ref(\".info/connected\"),\n      persence: firebase.database().ref(\"presence\")\n    };\n  }\n\n  setStatus = user => {\n    const { connectionRef, persence } = this.state;\n    connectionRef.on(\"value\", snap => {\n      if (snap.val()) {\n        let status = persence.child(user.userID);\n        status.set(true);\n        status.onDisconnect().remove();\n        firebase\n          .database()\n          .ref(`users/${user.userID}`)\n          .onDisconnect()\n          .set({\n            ...user,\n            lastSeen: firebase.database.ServerValue.TIMESTAMP,\n            status: \"offline\"\n          });\n      }\n    });\n\n    persence.on(\"child_added\", snap => {\n      if (user.userID === snap.key) {\n        this.addStatus(user);\n      }\n    });\n  };\n\n  addStatus = (user, connected = true) => {\n    firebase\n      .database()\n      .ref(`users/${user.userID}`)\n      .set({ ...user, status: \"online\", lastSeen: \"\" });\n  };\n\n  componentDidMount() {\n    console.log(\"checkAUth\");\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        firebase\n          .database()\n          .ref(`users/${user.uid}`)\n          .on(\"value\", snapshot => {\n            if (snapshot.val()) {\n              this.setStatus(snapshot.val());\n              this.props.setuser(snapshot.val());\n              this.props.history.push(\"/\");\n            } else {\n              this.props.history.push(\"/login\");\n            }\n          });\n      } else {\n        this.props.clearuser();\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n  render() {\n    return this.props.loading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <PrivateRoute\n          exact\n          path=\"/\"\n          component={Home}\n          isAuthenticated={this.props.isAuthenticated}\n        />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => {\n  return {\n    loading: user.loading,\n    isAuthenticated: user.isAuthenticated\n  };\n};\n\nconst mapDisptachToProps = disptach => {\n  return {\n    setuser: data => disptach(setUser(data)),\n    clearuser: () => disptach(clearUser())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDisptachToProps\n  )(App)\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reducer from \"./store/reducer\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst store = createStore(reducer, composeWithDevTools());\n\nconst Root = (\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}